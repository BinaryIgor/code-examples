<h1 class="text-2xl my-8">{{tasks.title}}</h1>

{{#hasProjects}}
    <div class="mt-8">
        <input class="p-4" name="project"
               placeholder="{{tasks.projects-filter-placeholder}}"
               value="{{projectsFilterValue}}"
               hx-get="/tasks"
               hx-trigger="input changed delay:500ms"
               hx-target="#tasks-container"
               hx-include="[name='status']"
               hx-replace-url="true">
        <p class="italic ml-2">{{tasks.options}}: {{projectsFilterOptions}}</p>
        <input class="p-4 mt-4" name="status"
               placeholder="{{tasks.statuses-filter-placeholder}}"
               value="{{statusesFilterValue}}"
               hx-get="/tasks"
               hx-trigger="input changed delay:500ms"
               hx-target="#tasks-container"
               hx-include="[name='project']"
               hx-replace-url="true">
        <p class="italic ml-2">{{tasks.options}}: {{statusesFilterOptions}}</p>
    </div>

    <div id="tasks-container" class="space-y-2 my-12">
        {{> tasks-search-results}}
    </div>
    {{> ../components/confirmable-modal}}

    <div class="my-8"><a id="add-task-link" class="underline" href="/tasks/create">{{tasks.add}}</a></div>
{{/hasProjects}}

{{^hasProjects}}
    <div class="my-8"><a class="underline" href="/projects">{{tasks.no-projects}}</a></div>
{{/hasProjects}}

<script>
    window.addEventListener("pageshow", e => {
       if (e.persisted) {
           location.reload();
       }
   });

   const tasksContainer = document.getElementById("tasks-container");
   if (tasksContainer) {
       document.getElementById("add-task-link").onclick = e => {
           if (location.search) {
               const tasksSearch = btoa(location.search.substr(1));
               e.target.href = e.target.href + "?tasksSearch=" + tasksSearch;
           }
       };

       const scroll = sessionStorage.getItem("tasks-scroll");
       if (scroll) {
           document.documentElement.scroll(0, scroll);
           sessionStorage.removeItem("tasks-scroll");
       }

       function goToTask(id) {
           let url = "/tasks/" + id;
           const scrollPosition = document.documentElement.scrollTop;

           if (location.search) {
               const tasksSearch = btoa(location.search.substr(1));
               url = url + "?tasksSearch=" + tasksSearch;
           }

           sessionStorage.setItem("tasks-scroll", scrollPosition);

           location.href = url;
       }

       const deleteTaskMessageTemplate = "{{tasks.delete-task-modal-message-template}}";
        let deleteTaskHTMXEvent;

         document.addEventListener("confirmable-modal-right-clicked", e => {
            deleteTaskHTMXEvent.detail.issueRequest(deleteTaskHTMXEvent);
         });

         document.addEventListener("htmx:confirm", e => {
            if (!e.detail.question) {
                // not a confirmable request
                return;
            }
            e.preventDefault();
            deleteTaskHTMXEvent = e;
            const deleteTaskName = e.detail.question;
            const modalMessage = deleteTaskMessageTemplate.replace("{task}", deleteTaskName);
            document.dispatchEvent(new CustomEvent('confirmable-modal-show', { detail: { content: modalMessage }}));
        });
    }
</script>